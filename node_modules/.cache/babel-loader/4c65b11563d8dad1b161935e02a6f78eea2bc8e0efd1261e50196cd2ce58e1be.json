{"ast":null,"code":"var _jsxFileName = \"/Users/aadityakhanal/Desktop/webdev/INF286P/LAB-10/LAB-10React/src/App.js\";\nimport './App.css';\nimport Container from './Components/Container';\nimport Navbar from './Components/Navbar';\nimport React, { useState } from 'react';\nimport request from 'browser-request';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  var _s = $RefreshSig$();\n  function App() {\n    _s();\n    const [cityName, setCityName] = useState('');\n    const [weatherData, setWeatherData] = useState(null);\n    const apiKey = 'eb819c14c08ff9e4cf99ba3381655186  ';\n    const fetchWeatherData = () => {\n      const apiUrl = `http://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${apiKey}&units=metric`;\n      request({\n        url: apiUrl,\n        json: true\n      }, (error, response, body) => {\n        if (error) {\n          console.error('Error fetching data:', error);\n        } else if (response.statusCode === 200) {\n          setWeatherData(body);\n        } else {\n          console.error('Unable to fetch data:', response.statusCode);\n        }\n      });\n    };\n    const renderWeatherData = () => {\n      if (weatherData) {\n        const weatherDescription = weatherData.weather[0].description;\n        const temperature = weatherData.main.temp;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Weather in \", cityName, \": \", weatherDescription, \", \", temperature, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this);\n      }\n      return null;\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Weather App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: cityName,\n        onChange: e => setCityName(e.target.value),\n        placeholder: \"Enter city name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchWeatherData,\n        children: \"Get Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), renderWeatherData()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this);\n  }\n  _s(App, \"QgGHwqNouQayhpW30vjH9yJmtqA=\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Container","Navbar","React","useState","request","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","$RefreshSig$","cityName","setCityName","weatherData","setWeatherData","apiKey","fetchWeatherData","apiUrl","url","json","error","response","body","console","statusCode","renderWeatherData","weatherDescription","weather","description","temperature","main","temp","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/aadityakhanal/Desktop/webdev/INF286P/LAB-10/LAB-10React/src/App.js"],"sourcesContent":["import './App.css';\nimport Container from './Components/Container';\nimport Navbar from './Components/Navbar';\nimport React, { useState } from 'react';\nimport request from 'browser-request';\n\nfunction App() {\n  \n\nfunction App() {\n  const [cityName, setCityName] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n\n  const apiKey = 'eb819c14c08ff9e4cf99ba3381655186  ';\n\n  const fetchWeatherData = () => {\n    const apiUrl = `http://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${apiKey}&units=metric`;\n\n    request({ url: apiUrl, json: true }, (error, response, body) => {\n      if (error) {\n        console.error('Error fetching data:', error);\n      } else if (response.statusCode === 200) {\n        setWeatherData(body);\n      } else {\n        console.error('Unable to fetch data:', response.statusCode);\n      }\n    });\n  };\n\n  const renderWeatherData = () => {\n    if (weatherData) {\n      const weatherDescription = weatherData.weather[0].description;\n      const temperature = weatherData.main.temp;\n\n      return (\n        <div>\n          Weather in {cityName}: {weatherDescription}, {temperature}Â°C\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Weather App</h1>\n      <input\n        type=\"text\"\n        value={cityName}\n        onChange={(e) => setCityName(e.target.value)}\n        placeholder=\"Enter city name\"\n      />\n      <button onClick={fetchWeatherData}>Get Weather</button>\n      {renderWeatherData()}\n    </div>\n  );\n}\n  return (\n    <>\n      <Navbar />\n      <div>\n        <Container />\n      </div>\n    </>\n  );\n}\n\n\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}