{"ast":null,"code":"var _jsxFileName = \"/Users/aadityakhanal/Desktop/webdev/INF286P/LAB-10/LAB-10React/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Container from './Components/Container';\nimport Navbar from './Components/Navbar';\nimport React, { useState } from 'react';\nimport request from 'browser-request';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  const [cityName, setCityName] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n  const apiKey = 'eb819c14c08ff9e4cf99ba3381655186';\n  const fetchWeatherData = () => {\n    const apiUrl = `http://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${apiKey}&units=metric`;\n    request({\n      url: apiUrl,\n      json: true\n    }, (error, response, body) => {\n      if (error) {\n        console.error('Error fetching data:', error);\n      } else if (response.statusCode === 200) {\n        setWeatherData(body);\n      } else {\n        console.error('Unable to fetch data:', response.statusCode);\n      }\n    });\n  };\n  const renderWeatherData = () => {\n    if (weatherData) {\n      const weatherDescription = weatherData.weather[0].description;\n      const temperature = weatherData.main.temp;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Weather in \", cityName, \": \", weatherDescription, \", \", temperature, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: cityName,\n      onChange: e => setCityName(e.target.value),\n      placeholder: \"Enter city name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchWeatherData,\n      children: \"Get Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), renderWeatherData()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QgGHwqNouQayhpW30vjH9yJmtqA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Container","Navbar","React","useState","request","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","children","fileName","_jsxFileName","lineNumber","columnNumber","cityName","setCityName","weatherData","setWeatherData","apiKey","fetchWeatherData","apiUrl","url","json","error","response","body","console","statusCode","renderWeatherData","weatherDescription","weather","description","temperature","main","temp","className","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/aadityakhanal/Desktop/webdev/INF286P/LAB-10/LAB-10React/src/App.js"],"sourcesContent":["import './App.css';\nimport Container from './Components/Container';\nimport Navbar from './Components/Navbar';\nimport React, { useState } from 'react';\nimport request from 'browser-request';\n\nfunction App() {\n  return (\n    <>\n      <Navbar />\n      <div>\n        <Container />\n      </div>\n    </>\n  );\n  const [cityName, setCityName] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n\n  const apiKey = 'eb819c14c08ff9e4cf99ba3381655186';\n\n  const fetchWeatherData = () => {\n    const apiUrl = `http://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${apiKey}&units=metric`;\n\n    request({ url: apiUrl, json: true }, (error, response, body) => {\n      if (error) {\n        console.error('Error fetching data:', error);\n      } else if (response.statusCode === 200) {\n        setWeatherData(body);\n      } else {\n        console.error('Unable to fetch data:', response.statusCode);\n      }\n    });\n  };\n\n  const renderWeatherData = () => {\n    if (weatherData) {\n      const weatherDescription = weatherData.weather[0].description;\n      const temperature = weatherData.main.temp;\n\n      return (\n        <div>\n          Weather in {cityName}: {weatherDescription}, {temperature}Â°C\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Weather App</h1>\n      <input\n        type=\"text\"\n        value={cityName}\n        onChange={(e) => setCityName(e.target.value)}\n        placeholder=\"Enter city name\"\n      />\n      <button onClick={fetchWeatherData}>Get Weather</button>\n      {renderWeatherData()}\n    </div>\n  );\n\n}\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}